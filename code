#Task
 """
    Return True if hand_1 beats hand_2, and False otherwise.
    
    In order for hand_1 to beat hand_2 the following must be true:
    - The total of hand_1 must not exceed 21
    - The total of hand_1 must exceed the total of hand_2 OR hand_2's total must exceed 21
    
    Hands are represented as a list of cards. Each card is represented by a string.
    
    When adding up a hand's total, cards with numbers count for that many points. Face
    cards ('J', 'Q', and 'K') are worth 10 points. 'A' can count for 1 or 11.
    
    When determining a hand's total, you should try to count aces in the way that 
    maximizes the hand's total without going over 21. e.g. the total of ['A', 'A', '9'] is 21,
    the total of ['A', 'A', '9', '3'] is 14.
    
    Examples:
    >>> blackjack_hand_greater_than(['K'], ['3', '4'])
    True
    >>> blackjack_hand_greater_than(['K'], ['10'])
    False
    >>> blackjack_hand_greater_than(['K', 'K', '2'], ['3'])
    False
    """
#Points
points={str(i): i for i in range(11)}
points["K"]=10
points["Q"]=10
points["J"]=10
points["A"]=11

def adding(hand):
    ace_count=0
    total=0
    for i in range(len(hand)):
        total+=points[hand[i]]
        if hand[i]=="A":
            ace_count+=1
    while (ace_count > 0)and (total>21):
        total-=10
        ace_count-=1
    return total

t1=["A","A","A","J","Q"]
adding(t1)

def blackjack_hand_greater_than(hand_1, hand_2):
    to1=adding(hand_1) 
    to2=adding(hand_2)
    if to1 > 21:
        return False
    elif to1 > to2 or to2>21:
        return True
    else: 
        return False
